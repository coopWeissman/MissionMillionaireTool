{"ast":null,"code":"var _jsxFileName = \"/Users/cooperweissman/mmtool/src/Main.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"necomponts/Grid/GridContainer.js\";\nimport CustomInput from \"/Users/cooperweissman/mmtool/src/CustomInput.js\";\nimport Button from \"/Users/cooperweissman/mmtool/src/Button.js\";\nimport Card from \"/Users/cooperweissman/mmtool/src/Card.js\";\nimport CardHeader from \"/Users/cooperweissman/mmtool/src/CardHeader.js\";\nimport CardBody from \"/Users/cooperweissman/mmtool/src/CardBody.js\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Chart from \"/Users/cooperweissman/mmtool/src/Chart.js\";\nimport PieGraph from \"./PieGraph\";\nimport Stats from \"./Stats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  },\n  Alignment: {\n    alignItems: \"left\",\n    justifyContent: \"left\",\n    textAlign: \"left\"\n  },\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    padding: theme.spacing(0, 1)\n  },\n  card: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2)\n  },\n  centerPie: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: 'flex'\n  }\n}));\n\nfunction useInterest() {\n  _s();\n\n  const [interest, setInterest] = useState();\n\n  function hello() {\n    setInterest(e.target.value / 100);\n  }\n\n  return [interest, setInterest];\n}\n\n_s(useInterest, \"sQdoNSGbMy1/Qk6+LqK/G8czWKA=\");\n\n;\n\nfunction useAge() {\n  _s2();\n\n  const [age, setAge] = useState();\n\n  function hello() {\n    setInterest(e.target.value / 100);\n  }\n\n  return [age, setAge];\n}\n\n_s2(useAge, \"BRoSIlsbOuyhghMP1MbwhOy6QiM=\");\n\n;\n\nfunction Main() {\n  _s3();\n\n  const [interest, setInterest] = useInterest();\n  const [amount, setAmount] = useState();\n  const [age, setAge] = useAge();\n  const [income, setIncome] = useState();\n  const [expenses, setExpenses] = useState();\n  const [retirement, setRetirement] = useState();\n  const [savings, setSavings] = useState();\n  const [final, setFinal] = useState();\n  const spending = income - final - expenses;\n  const classes = useStyles();\n\n  function calculate() {\n    const result = interest / 12 * (amount - savings * (1 + interest / 12) ** ((retirement - age) * 12)) / ((1 + interest / 12) ** ((retirement - age) * 12) - 1); // (r/12*(1000000-I*(1+r/12)**(t*12)))/((1+r/12)**(t*12)-1)\n\n    const test = income - savings;\n    console.log(interest * interest);\n    console.log(Number(age) + Number(age));\n    setFinal(result);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 15,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: classes.cardTitleWhite,\n              children: \"Monthly Contribution Calculator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.cardCategoryWhite,\n              children: \"Calculate how much money you need to invest per month to reach your longterm goals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: \"Current Age?\",\n                  id: \"username\",\n                  change: e => setAge(e.target.value),\n                  formControlProps: {\n                    fullWidth: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: \"Current Savings?\",\n                  id: \"email-address\",\n                  type: \"number\",\n                  change: e => setSavings(e.target.value),\n                  formControlProps: {\n                    fullWidth: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: \"Monthly Salary?\",\n                  id: \"Monthly Salary\",\n                  type: \"number\",\n                  change: e => setIncome(e.target.value),\n                  formControlProps: {\n                    fullWidth: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: \"Expenses?\",\n                  id: \"Expenses\",\n                  type: \"number\",\n                  change: e => setExpenses(e.target.value),\n                  formControlProps: {\n                    fullWidth: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: \"Ideal age of retirement?\",\n                  id: \"last-name\",\n                  change: e => setRetirement(e.target.value),\n                  formControlProps: {\n                    fullWidth: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: \"How much do you want?\",\n                  id: \"city\",\n                  change: e => setAmount(e.target.value),\n                  formControlProps: {\n                    fullWidth: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: \"Annual Interest rate?\",\n                  id: \"country\",\n                  change: e => setInterest(e.target.value / 100),\n                  formControlProps: {\n                    fullWidth: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 6,\n                sm: 6,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: calculate,\n                  children: \"Calculate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Monthly Contibution: $\", final]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.cardTitleWhite,\n            children: \"Bar Chart Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.cardCategoryWhite,\n            children: \"Scroll over each bar to see projected value by year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            age: age,\n            retirement: retirement,\n            savings: savings,\n            amount: amount,\n            contributions: final,\n            interest: interest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.cardTitleWhite,\n            children: \"Important Nubers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.cardCategoryWhite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(Stats, {\n            income: income,\n            spending: spending,\n            expenses: expenses,\n            savings: savings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              color: \"primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: classes.cardTitleWhite,\n                children: \"Budget Distribution\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.cardCategoryWhite,\n                children: \"salary breakdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: classes.centerPie,\n              children: /*#__PURE__*/_jsxDEV(PieGraph, {\n                contributions: final,\n                income: income,\n                spending: spending,\n                expenses: expenses\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Main, \"vZlD3HYEbhk8hRj3LiTd3RTbS3c=\", false, function () {\n  return [useInterest, useAge, useStyles];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/cooperweissman/mmtool/src/Main.js"],"names":["React","useState","makeStyles","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardBody","Typography","Grid","Chart","PieGraph","Stats","useStyles","theme","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","Alignment","alignItems","justifyContent","textAlign","root","flexGrow","overflow","padding","spacing","card","maxWidth","centerPie","display","useInterest","interest","setInterest","hello","e","target","value","useAge","age","setAge","Main","amount","setAmount","income","setIncome","expenses","setExpenses","retirement","setRetirement","savings","setSavings","final","setFinal","spending","classes","calculate","result","test","console","log","Number","fullWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"necomponts/Grid/GridContainer.js\";\nimport CustomInput from \"/Users/cooperweissman/mmtool/src/CustomInput.js\";\nimport Button from \"/Users/cooperweissman/mmtool/src/Button.js\";\nimport Card from \"/Users/cooperweissman/mmtool/src/Card.js\";\nimport CardHeader from \"/Users/cooperweissman/mmtool/src/CardHeader.js\";\nimport CardBody from \"/Users/cooperweissman/mmtool/src/CardBody.js\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Chart from \"/Users/cooperweissman/mmtool/src/Chart.js\";\nimport PieGraph from \"./PieGraph\";\nimport Stats from \"./Stats\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n  },\n  Alignment: {\n    alignItems: \"left\",\n    justifyContent: \"left\",\n    textAlign: \"left\",\n  },\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    padding: theme.spacing(0, 1),\n  },\n  card: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n  centerPie: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: 'flex',\n  }\n}));\n\n    \nfunction useInterest() {\n  const [interest, setInterest] = useState();\n  \n  function hello(){\n      setInterest(e.target.value/100)\n  }\n      return [interest, setInterest];\n  \n  };\nfunction useAge() {\n    const [age, setAge] = useState();\n    \n    function hello(){\n        setInterest(e.target.value/100)\n    }\n        return [age, setAge];\n    \n    };\n\nfunction Main() {\n  const [interest, setInterest] = useInterest();\n const [amount, setAmount] = useState();\n const [age, setAge] = useAge();\n const [income, setIncome] = useState();\n const [expenses, setExpenses] = useState();\n const [retirement, setRetirement] = useState();\n const [savings, setSavings] = useState();\n const [final, setFinal] = useState();\n const spending = income-final-expenses;\n const classes = useStyles();\n  function calculate() {\n    const result = (interest/12*(amount-savings*(1+interest/12)**((retirement-age)*12)))/((1+interest/12)**((retirement-age)*12)-1)\n      // (r/12*(1000000-I*(1+r/12)**(t*12)))/((1+r/12)**(t*12)-1)\n      const test = (income-savings)\n      console.log(interest*interest)\n      console.log(Number(age)+Number(age))\n      setFinal(result) \n    };\n  \n  return (\n    <div className=\"root\">\n    <GridContainer>\n      <GridItem xs={12} sm={12} md={15}>\n        <Card>\n          <CardHeader color=\"primary\">\n            <h4 className={classes.cardTitleWhite}>Monthly Contribution Calculator</h4>\n            <p className={classes.cardCategoryWhite}>Calculate how much money you need to invest per month to reach your longterm goals</p>\n          </CardHeader>\n          <CardBody>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <CustomInput\n                  labelText=\"Current Age?\"\n                  id=\"username\"\n                  change={(e) => setAge(e.target.value)}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={12}>\n                <CustomInput\n                  labelText=\"Current Savings?\"\n                  id=\"email-address\"\n                  type=\"number\"\n                  change={(e) => setSavings(e.target.value)}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={12}>\n                <CustomInput\n                  labelText=\"Monthly Salary?\"\n                  id=\"Monthly Salary\"\n                  type=\"number\"\n                  change={(e) => setIncome(e.target.value)}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={12}>\n                <CustomInput\n                  labelText=\"Expenses?\"\n                  id=\"Expenses\"\n                  type=\"number\"\n                  change={(e) => setExpenses(e.target.value)}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n              </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n                <CustomInput\n                  labelText=\"Ideal age of retirement?\"\n                  id=\"last-name\"\n                  change={(e) => setRetirement(e.target.value)}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={12}>\n                <CustomInput\n                  labelText=\"How much do you want?\"\n                  id=\"city\"\n                  change={(e) => setAmount(e.target.value)}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={12}>\n                <CustomInput\n                  labelText=\"Annual Interest rate?\"\n                  id=\"country\"\n                  change={(e) => setInterest(e.target.value/100)}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n              </GridItem>\n            </GridContainer>\n            <GridContainer>\n              <GridItem xs={6} sm={6} md={6}>\n                <Button color=\"primary\" onClick={calculate}>Calculate</Button>\n                <Typography>Monthly Contibution: ${final}</Typography>\n              </GridItem>\n            </GridContainer>\n          </CardBody>\n        </Card>\n      </GridItem>\n    </GridContainer>\n  <GridContainer>\n    <Card>\n          <CardHeader color=\"primary\">\n            <h4 className={classes.cardTitleWhite}>Bar Chart Breakdown</h4>\n            <p className={classes.cardCategoryWhite}>Scroll over each bar to see projected value by year</p>\n          </CardHeader>\n          <CardBody>\n    <Chart age={age} retirement={retirement}  savings={savings} amount={amount} contributions={final} interest={interest}/>\n  </CardBody>\n  </Card>\n  <Card>\n          <CardHeader color=\"primary\">\n            <h4 className={classes.cardTitleWhite}>Important Nubers</h4>\n            <p className={classes.cardCategoryWhite}></p>\n          </CardHeader>\n          <CardBody>\n    <Stats income={income} spending={spending} expenses={expenses} savings={savings}/>\n  </CardBody>\n  </Card>\n  </GridContainer>\n  <GridContainer>\n  <Grid container spacing={3}>\n  <Grid item xs={12}>\n    <Card>\n          <CardHeader color=\"primary\">\n            <h4 className={classes.cardTitleWhite}>Budget Distribution</h4>\n            <p className={classes.cardCategoryWhite}>salary breakdown</p>\n          </CardHeader>\n  <CardBody className={classes.centerPie}>\n\n    <PieGraph contributions={final} income={income} spending={spending} expenses={expenses}/>\n\n  </CardBody>\n  </Card>\n  </Grid>\n  {/* <Grid item xs={12}>\n    <Card>\n          <CardHeader color=\"primary\">\n            <h4 className={classes.cardTitleWhite}>Bar Chart Breakdown</h4>\n            <p className={classes.cardCategoryWhite}>Scroll over each bar to see projected value by year</p>\n          </CardHeader>\n  <CardBody className={classes.centerPie}>\n\n    <PieGraph contributions={final} income={income} spending={spending} expenses={expenses}/>\n\n  </CardBody>\n  </Card>\n  </Grid> */}\n  </Grid>\n  </GridContainer>\n  </div>\n  )\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}